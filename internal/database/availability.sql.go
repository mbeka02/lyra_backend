// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: availability.sql

package database

import (
	"context"
	"database/sql"
	"time"
)

const createAvailability = `-- name: CreateAvailability :one
INSERT INTO availability (
  doctor_id, day_of_week, start_time, end_time, is_recurring
) VALUES (
  $1, $2, $3, $4, $5
) RETURNING availability_id, doctor_id, start_time, end_time, is_recurring, specific_date, created_at, updated_at, day_of_week
`

type CreateAvailabilityParams struct {
	DoctorID    int64        `json:"doctor_id"`
	DayOfWeek   int32        `json:"day_of_week"`
	StartTime   time.Time    `json:"start_time"`
	EndTime     time.Time    `json:"end_time"`
	IsRecurring sql.NullBool `json:"is_recurring"`
}

func (q *Queries) CreateAvailability(ctx context.Context, arg CreateAvailabilityParams) (Availability, error) {
	row := q.db.QueryRowContext(ctx, createAvailability,
		arg.DoctorID,
		arg.DayOfWeek,
		arg.StartTime,
		arg.EndTime,
		arg.IsRecurring,
	)
	var i Availability
	err := row.Scan(
		&i.AvailabilityID,
		&i.DoctorID,
		&i.StartTime,
		&i.EndTime,
		&i.IsRecurring,
		&i.SpecificDate,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.DayOfWeek,
	)
	return i, err
}
